//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegionApp.ServiceReferenceCC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionModel", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCC.Model")]
    [System.SerializableAttribute()]
    public partial class RegionModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RegionApp.ServiceReferenceCC.ZipCodeModel[] ZipCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RegionApp.ServiceReferenceCC.ZipCodeModel[] ZipCodes {
            get {
                return this.ZipCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodesField, value) != true)) {
                    this.ZipCodesField = value;
                    this.RaisePropertyChanged("ZipCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZipCodeModel", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCC.Model")]
    [System.SerializableAttribute()]
    public partial class ZipCodeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string End {
            get {
                return this.EndField;
            }
            set {
                if ((object.ReferenceEquals(this.EndField, value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Start {
            get {
                return this.StartField;
            }
            set {
                if ((object.ReferenceEquals(this.StartField, value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCC.IServiceRegions")]
    public interface IServiceRegions {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegions/FindAll", ReplyAction="http://tempuri.org/IServiceRegions/FindAllResponse")]
        RegionApp.ServiceReferenceCC.RegionModel[] FindAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegions/FindAll", ReplyAction="http://tempuri.org/IServiceRegions/FindAllResponse")]
        System.Threading.Tasks.Task<RegionApp.ServiceReferenceCC.RegionModel[]> FindAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegions/Find", ReplyAction="http://tempuri.org/IServiceRegions/FindResponse")]
        RegionApp.ServiceReferenceCC.RegionModel Find(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegions/Find", ReplyAction="http://tempuri.org/IServiceRegions/FindResponse")]
        System.Threading.Tasks.Task<RegionApp.ServiceReferenceCC.RegionModel> FindAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegions/create", ReplyAction="http://tempuri.org/IServiceRegions/createResponse")]
        bool create(RegionApp.ServiceReferenceCC.RegionModel region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegions/create", ReplyAction="http://tempuri.org/IServiceRegions/createResponse")]
        System.Threading.Tasks.Task<bool> createAsync(RegionApp.ServiceReferenceCC.RegionModel region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegions/Edit", ReplyAction="http://tempuri.org/IServiceRegions/EditResponse")]
        bool Edit(RegionApp.ServiceReferenceCC.RegionModel Region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegions/Edit", ReplyAction="http://tempuri.org/IServiceRegions/EditResponse")]
        System.Threading.Tasks.Task<bool> EditAsync(RegionApp.ServiceReferenceCC.RegionModel Region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegions/Delete", ReplyAction="http://tempuri.org/IServiceRegions/DeleteResponse")]
        bool Delete(RegionApp.ServiceReferenceCC.RegionModel Region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegions/Delete", ReplyAction="http://tempuri.org/IServiceRegions/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(RegionApp.ServiceReferenceCC.RegionModel Region);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceRegionsChannel : RegionApp.ServiceReferenceCC.IServiceRegions, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceRegionsClient : System.ServiceModel.ClientBase<RegionApp.ServiceReferenceCC.IServiceRegions>, RegionApp.ServiceReferenceCC.IServiceRegions {
        
        public ServiceRegionsClient() {
        }
        
        public ServiceRegionsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceRegionsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRegionsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRegionsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RegionApp.ServiceReferenceCC.RegionModel[] FindAll() {
            return base.Channel.FindAll();
        }
        
        public System.Threading.Tasks.Task<RegionApp.ServiceReferenceCC.RegionModel[]> FindAllAsync() {
            return base.Channel.FindAllAsync();
        }
        
        public RegionApp.ServiceReferenceCC.RegionModel Find(string id) {
            return base.Channel.Find(id);
        }
        
        public System.Threading.Tasks.Task<RegionApp.ServiceReferenceCC.RegionModel> FindAsync(string id) {
            return base.Channel.FindAsync(id);
        }
        
        public bool create(RegionApp.ServiceReferenceCC.RegionModel region) {
            return base.Channel.create(region);
        }
        
        public System.Threading.Tasks.Task<bool> createAsync(RegionApp.ServiceReferenceCC.RegionModel region) {
            return base.Channel.createAsync(region);
        }
        
        public bool Edit(RegionApp.ServiceReferenceCC.RegionModel Region) {
            return base.Channel.Edit(Region);
        }
        
        public System.Threading.Tasks.Task<bool> EditAsync(RegionApp.ServiceReferenceCC.RegionModel Region) {
            return base.Channel.EditAsync(Region);
        }
        
        public bool Delete(RegionApp.ServiceReferenceCC.RegionModel Region) {
            return base.Channel.Delete(Region);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(RegionApp.ServiceReferenceCC.RegionModel Region) {
            return base.Channel.DeleteAsync(Region);
        }
    }
}
